// Course table seems working without those mocking requests, but the original ones are still kept here.
// in case we need them in the future.
import type { RequestHandler } from "express";
import type { Cookie } from "set-cookie-parser";

import { dsjxLogin } from "./login.js";
import { getSessionId, getTimeStamp } from "./utils.js";
import type { LoginFailedData, LoginOptions } from "../auth/index.js";
import type { EmptyObject } from "../typings.js";
import { IE_8_USER_AGENT, getCookieHeader } from "../utils/index.js";

type AuthOptions = LoginOptions | { cookies: Cookie[]; userID: string };

export type DSJXCourseOptions = AuthOptions & {
  id: number;
  time: string;
};

export const dsjxCourseHandler: RequestHandler<
  EmptyObject,
  EmptyObject,
  DSJXCourseOptions
> = async (req, res) => {
  try {
    let cookies: Cookie[] = [];
    let userID = "";

    const { id, time } = req.body;

    if ("cookies" in req.body) {
      ({ cookies, userID } = req.body);
    } else {
      const result = await dsjxLogin(req.body);

      if (result.status === "failed") return res.json(result);

      ({ cookies, userID } = result);
    }

    const sessionId = await getSessionId(cookies);

    const requestSSOParams = {
      callCount: "1",
      page: "/framework/main.jsp",
      httpSessionId: cookies.find((item) => item.name === "JSESSIONID")!.value,
      scriptSessionId: `${sessionId}${Math.floor(Math.random() * 1000)}`,
      "c0-scriptName": "dwrMonitor",
      "c0-methodName": "getFrmtipsByuserId",
      "c0-id": "0",
      batchId: "0",
    };

    const requestLoginResponse = await fetch(
      "https://dsjx.webvpn.nenu.edu.cn/dwr/call/plaincall/dwrMonitor.getFrmtipsByuserId.dwr",
      {
        method: "POST",
        headers: {
          Cookie: getCookieHeader(cookies),
          Referer: "https://dsjx.webvpn.nenu.edu.cn/framework/main.jsp",
          "User-Agent": IE_8_USER_AGENT,
        },
        body: `${Object.entries(requestSSOParams)
          .map(([key, value]) => `${key}=${value}`)
          .join("\n")}\n`,
      }
    );

    console.log(requestLoginResponse.status);
    console.log(await requestLoginResponse.text());

    const loginResponse = await fetch(
      "https://dsjx.webvpn.nenu.edu.cn/Logon.do?method=logonBySSO",
      {
        method: "POST",
        headers: {
          "Content-Type": "application/x-www-form-urlencoded",
          Cookie: getCookieHeader(cookies),
          Referer: "https://dsjx.webvpn.nenu.edu.cn/framework/main.jsp",
          "User-Agent": IE_8_USER_AGENT,
        },
      }
    );

    console.log(loginResponse.status);
    console.log(await loginResponse.text());

    const requestShortCutsParams = {
      callCount: "1",
      page: "/framework/main.jsp",
      httpSessionId: cookies.find((item) => item.name === "JSESSIONID")!.value,
      scriptSessionId: `${sessionId}${Math.floor(Math.random() * 1000)}`,
      "c0-scriptName": "kjcdMonitor",
      "c0-methodName": "findFrmshortcuts",
      "c0-id": "0",
      "c0-param0": `string:${userID}`,
      batchId: "1",
    };

    const requestShortCutsResponse = await fetch(
      "https://dsjx.webvpn.nenu.edu.cn/dwr/call/plaincall/kjcdMonitor.findFrmshortcuts.dwr",
      {
        method: "POST",
        headers: {
          Cookie: getCookieHeader(cookies),
          Referer: "https://dsjx.webvpn.nenu.edu.cn/framework/main.jsp",
          "User-Agent": IE_8_USER_AGENT,
        },
        body: `${Object.entries(requestShortCutsParams)
          .map(([key, value]) => `${key}=${value}`)
          .join("\n")}\n`,
      }
    );

    console.log(requestShortCutsResponse.status);
    console.log(await requestShortCutsResponse.text());

    const sessionId2 = await getSessionId(cookies);

    const requestCourseParams = {
      callCount: "1",
      page: "/framework/menuleft.jsp?fater=&winid=win1",
      httpSessionId: cookies.find((item) => item.name === "JSESSIONID")!.value,
      scriptSessionId: `${sessionId2}${Math.floor(Math.random() * 1000)}`,
      "c0-scriptName": "dwrMonitor",
      "c0-methodName": "emptyMap",
      "c0-id": "0",
      "c0-param0": `string:tkglAction.do%3Fmethod%3DkbxxXs${userID}`,
      batchId: "0",
    };

    const actionRequest = await fetch(
      "https://dsjx.webvpn.nenu.edu.cn/dwr/call/plaincall/dwrMonitor.emptyMap.dwr",
      {
        method: "POST",
        headers: {
          Cookie: getCookieHeader(cookies),
          Referer: "https://dsjx.webvpn.nenu.edu.cn/framework/main.jsp",
          "User-Agent": IE_8_USER_AGENT,
        },
        body: `${Object.entries(requestCourseParams)
          .map(([key, value]) => `${key}=${value}`)
          .join("\n")}\n`,
      }
    );

    console.log(actionRequest.status);
    const actionRequestContent = await actionRequest.text();

    console.log(actionRequestContent);

    const listRequest = await fetch(
      `https://dsjx.webvpn.nenu.edu.cn/tkglAction.do?${new URLSearchParams({
        method: "kbxxXs",
        tktime: getTimeStamp().toString(),
      }).toString()}`,
      {
        headers: {
          Accept:
            "image/gif, image/jpeg, image/pjpeg, application/x-ms-application, application/xaml+xml, application/x-ms-xbap, */*",
          Referer:
            "https://dsjx.webvpn.nenu.edu.cn/framework/new_window.jsp?lianjie=&winid=win1",
          "Accept-Language": "zh-Hans-CN,zh-Hans;q=0.8,en-US;q=0.5,en;q=0.2,",
          "User-Agent": IE_8_USER_AGENT,
          "Accept-Encoding": "gzip, deflate",
          Cookie: getCookieHeader(cookies),
        },
      }
    );

    console.log(listRequest.status);
    console.log(await listRequest.text());

    const params = new URLSearchParams({
      method: "goListKbByXs",
      istsxx: "no",
      xnxqh: time,
      zc: "",
      xs0101id: id.toString(),
    });

    console.log("Using params", params);

    const headers = {
      Cookie: getCookieHeader(cookies),
      Referer: `https://dsjx.webvpn.nenu.edu.cn/tkglAction.do?method=kbxxXs&tktime=${getTimeStamp().toString()}`,
      "User-Agent": IE_8_USER_AGENT,
    };

    console.log("Using headers", headers);

    const response = await fetch(
      `https://dsjx.webvpn.nenu.edu.cn/tkglAction.do?${params.toString()}`,
      {
        headers,
      }
    );

    console.log(response.status);

    const content = await response.text();

    console.log(content);

    res.end();
  } catch (err) {
    res.json(<LoginFailedData>{
      status: "failed",
      msg: (<Error>err).message,
    });
  }
};

// GET https://dsjx.webvpn.nenu.edu.cn/tkglAction.do?method=goListKbByXs&istsxx=no&xnxqh=2022-2023-2&zc=&xs0101id=2022010748 HTTP/1.1
// Accept: image/gif, image/jpeg, image/pjpeg, application/x-ms-application, application/xaml+xml, application/x-ms-xbap, */*
// Referer: https://dsjx.webvpn.nenu.edu.cn/tkglAction.do?method=kbxxXs&tktime=1687668874000
// Accept-Language: zh-Hans-CN,zh-Hans;q=0.8,en-US;q=0.5,en;q=0.2
// User-Agent: Mozilla/4.0 (compatible; MSIE 7.0; Windows NT 10.0; WOW64; Trident/7.0; .NET4.0C; .NET4.0E; .NET CLR 2.0.50727; .NET CLR 3.0.30729; .NET CLR 3.5.30729; Tablet PC 2.0)
// Accept-Encoding: gzip, deflate
// Host: dsjx.webvpn.nenu.edu.cn
// Connection: Keep-Alive
// Cookie: acw_tc=2760820916876678240602451ef28ffe313b9ebd76a5103c97d752bd1a22ab; JSESSIONID=C66CD2C8FBB5F45BFFD57503C20A6E7B; iPlanetDirectoryPro=AQIC5wM2LY4SfcxWtfHTasy4oocJQlTGkXqinGl3N298FJM%3D%40AAJTSQACMDE%3D%23
